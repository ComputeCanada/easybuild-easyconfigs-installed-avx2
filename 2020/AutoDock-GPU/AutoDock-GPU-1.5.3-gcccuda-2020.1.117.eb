# Built with EasyBuild version 4.6.0-ra6dbb4b22832c431590f725219d89d82c9946dba on 2022-10-06_15-38-48
easyblock = 'MakeCp'

name = 'AutoDock-GPU'
version = '1.5.3'

homepage = 'https://github.com/ccsb-scripps/AutoDock-GPU'
description = """OpenCL and Cuda accelerated version of AutoDock. It leverages its embarrasingly
parallelizable LGA by processing ligand-receptor poses in parallel over
multiple compute units.
AutoDock is a suite of automated docking tools. It is designed to predict how
small molecules, such as substrates or drug candidates, bind to a receptor of
known 3D structure."""

toolchain = {'name': 'gcccuda', 'version': '2020.1.117'}
toolchainopts = {'cstd': 'c++11'}

github_account = 'ccsb-scripps'
source_urls = [GITHUB_SOURCE]
sources = ['v%(version)s.tar.gz']
checksums = ['6557df95eed99323befddcef6b8da8b67eba22476efccd1e69a87ffdf075e5f4']

parallel = 1

# put CUDA compute capabilities in a shell variable to strip dots in make command
local_prebuildopts = 'CUDA_CC_TARGETS="%(cuda_cc_space_sep)s"; '

# Use complation flags from EB
local_prebuildopts += "sed -i 's/^LFLAGS=.*/LFLAGS=$(LDFLAGS)/;s/^CFLAGS=.*/CFLAGS+=$(IFLAGS) $(LFLAGS)/' Makefile.Cuda && "
local_prebuildopts += 'GPU_INCLUDE_PATH=$EBROOTCUDA/include '
local_prebuildopts += 'GPU_LIBRARY_PATH=$EBROOTCUDA/lib '

# build for CUDA with defined CUDA compute capabilities
local_buildsopts = 'DEVICE=CUDA TARGETS="${CUDA_CC_TARGETS//./}"'

local_nwi = [32, 64, 128, 256]
buildopts = [ "%s NUMWI=%s" % (local_buildsopts, x) for x in local_nwi ]
prebuildopts = len(local_nwi) * [ local_prebuildopts ]

files_to_copy = [
    (['bin/*'], 'bin'),
    (['doc', 'examples', 'LICENSE', 'LICENSE_LGPL', 'README.md'], 'share'),
    (['input'], 'share/examples'),
]

postinstallcmds = [
    "cd %(installdir)s/bin && ln -s autodock_gpu_64wi autodock_gpu",
]

sanity_check_paths = {
    'files': ['bin/autodock_gpu', 'bin/adgpu_analysis'] +
    	     ['bin/autodock_gpu_%swi' % x for x in local_nwi ],
    'dirs': ['share'],
}

sanity_check_commands = [('autodock_gpu', '--help')] + [('autodock_gpu_%swi' % x, '--help') for x in local_nwi]

moduleclass = 'tools'

# Build statistics
buildstats = [{
    "build_time": 165.68,
    "command_line": ['--add-system-to-minimal-toolchains', "--allow-loaded-modules='gentoo'", "--buildpath='/tmp/ebuser/avx2'", "--configfiles='/cvmfs/soft.computecanada.ca/easybuild/config.cfg,/cvmfs/soft.computecanada.ca/easybuild/config-gentoo.cfg'", "--containerpath='/cvmfs/soft.computecanada.ca/easybuild/containers'", "--cuda-compute-capabilities='6.0,7.0,7.5,8.0'", '--enforce-checksums', "--env-for-shebang='/cvmfs/soft.computecanada.ca/gentoo/2020/usr/bin/env -S'", "--filter-deps='Bison,CMake=:3.16.5[,flex,ncurses,libreadline,gzip,bzip2,zlib,binutils,M4,Autoconf,Automake,libtool,Autotools,Szip,libxml2,SQLite=:3.36[,cURL,Doxygen,expat=:2.2.5[,Mesa,libGLU,SWIG=:3.0.12],PCRE,libjpeg-turbo,LibTIFF,libpng,XZ,gettext,X11,pkg-config,pkgconf,libdrm,gperf,FLTK,fontconfig,freetype,GMP,GL2PS,GraphicsMagick,MPFR,libmatheval,Tcl,Tk,libX11,libXft,libXpm,libXext,libXt,makedepend,cairo,libiconv,FFmpeg,GLib,FLANN,hwloc=:2.4.0[,numactl,DBus,texinfo,libsndfile,Pango,Lua,FreeImage,zstd,util-linux,file,GTK+,libunwind,LAME,NASM,x264,x265,FriBidi,ASSIMP,libarchive,ImageMagick,Ghostscript,Tkinter,libtirpc,Zip,SDL2,GST-plugins-base,libevent,tcsh,time,libedit,libpciaccess,UnZip,Check,OpenSSL,giflib,libwebp,git'", "--filter-env-vars='LD_LIBRARY_PATH,LD_PRELOAD'", '--disable-fixed-installdir-naming-scheme', "--hide-deps='icc,ifort,GCCcore'", "--hide-toolchains='GCCcore,iompi,iomkl,gompic'", "--hooks='/cvmfs/soft.computecanada.ca/easybuild/cc_hooks_gentoo.py'", '--ignore-osdeps', "--include-module-naming-schemes='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/SoftCCHierarchicalMNS.py'", "--include-toolchains='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/toolchains/*.py'", "--installpath='/cvmfs/soft.computecanada.ca/easybuild'", '--minimal-toolchains', '--module-depends-on', '--module-extensions', "--module-naming-scheme='SoftCCHierarchicalMNS'", "--optarch='{\\'NVHPC\\': \\'tp=haswell\\', \\'Intel\\': \\'march=core-avx2 -axCore-AVX512\\', \\'GCC\\': \\'march=core-avx2\\'}'", "--packagepath='/cvmfs/soft.computecanada.ca/easybuild/packages'", "--parallel='8'", "--prefix='/cvmfs/soft.computecanada.ca/easybuild'", '--recursive-module-unload', "--repository='GitRepository'", "--repositorypath='/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo.git,2020'", "--robot-paths='/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/2020:/cvmfs/soft.computecanada.ca/easybuild/easyconfigs'", "--sourcepath='/cvmfs/soft.computecanada.ca/easybuild/sources'", "--subdir-modules='modules/2020'", "--subdir-software='software/2020'", "--subdir-user-modules='.local/easybuild/modules/2020'", "--suffix-modules-path=''", "--sysroot='/cvmfs/soft.computecanada.ca/gentoo/2020'", "--use-ccache='/cvmfs/local/ccache'", '--use-existing-modules', '/cvmfs/soft.computecanada.ca/easybuild/easyconfigs/a/AutoDock-GPU/AutoDock-GPU-1.5.3-gcccuda-2020.1.117.eb'],
    "core_count": 16,
    "cpu_arch": "x86_64",
    "cpu_arch_name": "UNKNOWN",
    "cpu_model": "Intel Xeon Processor (Skylake, IBRS)",
    "cpu_speed": 2494.14,
    "cpu_vendor": "Intel",
    "easybuild-easyblocks_version": "4.6.0-r36ad5b6fb76454c602b4d58180fe83cc2f83d9c5",
    "easybuild-framework_version": "4.6.0-ra6dbb4b22832c431590f725219d89d82c9946dba",
    "gcc_version": "Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0/libexec/gcc/x86_64-pc-linux-gnu/9.3.0/lto-wrapper; OFFLOAD_TARGET_NAMES=nvptx-none; Target: x86_64-pc-linux-gnu; Configured with: ../configure --with-sysroot=/cvmfs/soft.computecanada.ca/gentoo/2020 --enable-languages=c,c++,fortran --without-cuda-driver --enable-offload-targets=nvptx-none --enable-lto --enable-checking=release --disable-multilib --enable-shared=yes --enable-static=yes --enable-threads=posix --enable-plugins --enable-gold=default --enable-ld --with-plugin-ld=ld.gold --prefix=/cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0 --with-local-prefix=/cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0 --enable-bootstrap --with-isl=/tmp/ebuser/avx2/GCCcore/9.3.0/system-system/gcc-9.3.0/stage2_stuff --build=x86_64-pc-linux-gnu --host=x86_64-pc-linux-gnu; Thread model: posix; gcc version 9.3.0 (GCC) ; ",
    "glibc_version": "2.30",
    "hostname": "build-node.computecanada.ca",
    "install_size": 52877626,
    "modules_tool": ('Lmod', '/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/libexec/lmod', '8.7.4'),
    "os_name": "CentOS Linux",
    "os_type": "Linux",
    "os_version": "7.9.2009",
    "platform_name": "x86_64-unknown-linux",
    "python_version": "3.7.7 (default, May  5 2020, 15:36:34) ; [GCC 9.3.0]",
    "system_gcc_path": "/cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0/bin/gcc",
    "system_python_path": "/cvmfs/soft.computecanada.ca/gentoo/2020/usr/bin/python",
    "timestamp": 1665070690,
    "total_memory": 60232,
}]
