# Built with EasyBuild version 4.3.3-r15719a0ece2011cea9ce176d1763cdc620b188f4 on 2021-03-22_19-56-47
easyblock = 'PythonBundle'

name = 'FALCON'
# version is taken from https://github.com/PacificBiosciences/FALCON-integrate/releases
version = '1.8.8'
versionsuffix = '-Python-%(pyver)s'
local_commit_id = '86cec61'

homepage = 'https://github.com/PacificBiosciences/FALCON'
description = "Falcon: a set of tools for fast aligning long reads for consensus and assembly"

toolchain = {'name': 'GCCcore', 'version': '9.3.0'}

dependencies = [
    ('Python', '2.7.16'),
    ('SciPy-bundle', '2019.10', '-Python-%(pyver)s'),
]

use_pip = False

default_easyblock = 'ConfigureMake'

# commit IDs are determined via https://github.com/PacificBiosciences/FALCON-integrate/tree/1.8.8
# datestamps match commit dates
components = [
    ('DAZZ_DB', '20170411', {
        'source_urls': ['https://github.com/PacificBiosciences/DAZZ_DB/archive/'],
        'sources': ['f29d27d.tar.gz'],
        'checksums': ['e1a06eb07da120b291e62d9cecfe4c06899e719c788548a7def21d4f93e6fde1'],
        'skipsteps': ['configure'],
        'prebuildopts': "cd DAZZ_DB-* && ",
        'buildopts': 'CFLAGS="$CFLAGS"',
        'preinstallopts': "cd DAZZ_DB-* && mkdir %(installdir)s/{bin,include,lib} &&",
        'installopts': "PREFIX=%(installdir)s",
    }),
    ('DALIGNER', '20170410', {
        'source_urls': ['https://github.com/PacificBiosciences/DALIGNER/archive/'],
        'sources': ['0fe5240.tar.gz'],
        'checksums': ['f476281906cccb446126710b0e9a46200279eddea4b999456132c71ebd60c776'],
        'skipsteps': ['configure'],
        'prebuildopts': "cd DALIGNER-* && ",
        'buildopts': 'CFLAGS="$CFLAGS" CPATH=%(installdir)s/include:$CPATH LIBRARY_PATH=%(installdir)s/lib',
        'preinstallopts': "cd DALIGNER-* && ",
        'installopts': "PREFIX=%(installdir)s",
    }),
    ('DAMASKER', '20170211', {
        'source_urls': ['https://github.com/PacificBiosciences/DAMASKER/archive/'],
        'sources': ['144244b.tar.gz'],
        'checksums': ['61644a75605fddfd136ac41508d1b2caa5119fe68e70df6b19ccd8177413004c'],
        'skipsteps': ['configure'],
        'prebuildopts': "cd DAMASKER-* && ",
        'buildopts': 'CFLAGS="$CFLAGS"',
        'preinstallopts': "cd DAMASKER-* && ",
        'installopts': "PREFIX=%(installdir)s",
    }),
    ('DEXTRACTOR', '20160809', {
        'source_urls': ['https://github.com/PacificBiosciences/DEXTRACTOR/archive/'],
        'sources': ['8972680.tar.gz'],
        'checksums': ['236a6c10d226ab2ba4724fd0df9c84a2d8b88c1365cf47fb4228f1bdcad41bdf'],
        'skipsteps': ['configure'],
        'prebuildopts': "cd DEXTRACTOR-* && ",
        'buildopts': 'CFLAGS="$CFLAGS"',
        'preinstallopts': "cd DEXTRACTOR-* && ",
        'installopts': "PREFIX=%(installdir)s",
    }),
    # only download, is used in sanity check to run smoke test(s)
    ('FALCON-examples', '20170517', {
        'source_urls': [
            'https://github.com/pb-cdunn/FALCON-examples/archive/',
            'https://downloads.pacbcloud.com/public/data/git-sym/',
        ],
        'sources': [
            'b3b0917.tar.gz',
            'synth5k.2016-11-02.tgz',
        ],
        'checksums': [
            '6ad63ff783537a5f8d244796624b1439f4b8541fe09fad6e9b14fd839ca7a207',  # b3b0917.tar.gz
            'd6a148c75e52bc45c628be97fde6ed9b83e841ed4668cd08e2aee5d5bf76943a',  # synth5k.2016-11-02.tgz
        ],
        'skipsteps': ['configure', 'build', 'install'],
    }),
]

exts_list = [
    ('networkx', '1.10', {
        'source_urls': ['https://pypi.python.org/packages/source/n/networkx'],
        'checksums': ['ced4095ab83b7451cec1172183eff419ed32e21397ea4e1971d92a5808ed6fb8'],
    }),
    ('pypeFLOW', '20170504', {
        'source_tmpl': 'f23a1b2.tar.gz',
        'source_urls': ['https://github.com/PacificBiosciences/pypeFLOW/archive/'],
        'checksums': ['3ea7bb390370b988dc4254ffed403c3e2b78da140fbef24556a93ce450ad20cb'],
    }),
    (name, version, {
        'modulename': 'falcon_kit',
        'source_tmpl': '%s.tar.gz' % local_commit_id,
        'source_urls': ['https://github.com/PacificBiosciences/FALCON/archive/'],
        'checksums': ['9470563d962546566fc21d3c41b7ab87dcf1ffdd52cda244a7cad54ffa3199a6'],
    }),
]

sanity_check_paths = {
    'files': ['bin/Catrack', 'bin/DBdump', 'bin/fasta2DB', 'include/DB.h', 'include/QV.h', 'lib/libdazzdb.a',  # DAZZ_DB
              'bin/daligner', 'bin/DB2Falcon', 'bin/HPC.daligner', 'bin/LAmerge', 'bin/LAsort',  # DALIGNER
              'bin/datander', 'bin/HPC.REPmask', 'bin/HPC.TANmask', 'bin/REPmask', 'bin/TANmask',  # DAMASKER
              'bin/dexta', 'bin/undexta',  # DEXTRACTOR
              'bin/heartbeat-wrapper', 'bin/pwatcher-main',  # pypeFLOW
              'bin/fc_consensus', 'bin/fc_fetch_reads', 'bin/fc_run'],  # FALCON
    'dirs': [],
}

# cfr. https://github.com/pb-cdunn/FALCON-examples/blob/master/makefile
sanity_check_commands = [
    # remove broken symbolic link & move synth5k to right location
    # needs to be done in two steps because of use of '*' in target path
    "rm %(builddir)s/FALCON-examples*/run/synth0/data/synth5k",
    "mv %(builddir)s/synth5k.2016-11-02 %(builddir)s/synth5k",
    "mv %(builddir)s/synth5k %(builddir)s/FALCON-examples*/run/synth0/data/",
    # set up test by running fc_run.py
    "cd %(builddir)s/FALCON-examples* && cd run/synth0 && fc_run.py fc_run.cfg logging.ini",
    # run actual integration test
    "cd %(builddir)s/FALCON-examples* && make -C run/synth0 test",
]

moduleclass = 'bio'

# Build statistics
buildstats = [{
    "build_time": 80.22,
    "command_line": ['--add-system-to-minimal-toolchains', "--allow-loaded-modules='gentoo'", "--buildpath='/tmp/ebuser/avx2'", "--configfiles='/cvmfs/soft.computecanada.ca/easybuild/config.cfg,/cvmfs/soft.computecanada.ca/easybuild/config-gentoo.cfg'", "--containerpath='/cvmfs/soft.computecanada.ca/easybuild/containers'", "--cuda-compute-capabilities='3.5,3.7,5.0,6.0,7.0,7.5,8.0'", '--enforce-checksums', "--env-for-shebang='/cvmfs/soft.computecanada.ca/gentoo/2020/usr/bin/env -S'", "--filter-deps='Bison,CMake=:3.16.5[,flex,ncurses,libreadline,gzip,bzip2,zlib,binutils,M4,Autoconf,Automake,libtool,Autotools,Szip,libxml2,SQLite,cURL,Doxygen,expat=:2.2.5[,Mesa,libGLU,SWIG=:3.0.12],PCRE,libjpeg-turbo,LibTIFF,libpng,XZ,gettext,X11,pkg-config,libdrm,gperf,FLTK,fontconfig,freetype,GMP,GL2PS,GraphicsMagick,MPFR,libmatheval,Tcl,Tk,libX11,libXft,libXpm,libXext,libXt,makedepend,cairo,libiconv,FFmpeg,GLib,FLANN,hwloc=:2.4.0[,numactl,DBus,texinfo,libsndfile,Pango,Lua,FreeImage,zstd,util-linux,file,GTK+,libunwind,LAME,NASM,x264,x265,FriBidi,ASSIMP,libarchive,ImageMagick,Ghostscript,Tkinter,libtirpc,Zip,SDL2,GST-plugins-base,libevent,tcsh,time,libedit,libpciaccess,UnZip,Check'", "--filter-env-vars='LD_LIBRARY_PATH,LD_PRELOAD'", '--disable-fixed-installdir-naming-scheme', "--hide-deps='icc,ifort,GCCcore'", "--hide-toolchains='GCCcore,iompi,iomkl'", "--hooks='/cvmfs/soft.computecanada.ca/easybuild/cc_hooks_gentoo.py'", '--ignore-osdeps', "--include-module-naming-schemes='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/SoftCCHierarchicalMNS.py'", "--include-toolchains='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/toolchains/*.py'", "--installpath='/cvmfs/soft.computecanada.ca/easybuild'", '--disable-map-toolchains', '--minimal-toolchains', '--module-depends-on', '--module-extensions', "--module-naming-scheme='SoftCCHierarchicalMNS'", "--optarch='{\\'NVHPC\\': \\'tp=haswell\\', \\'Intel\\': \\'march=core-avx2 -axCore-AVX512\\', \\'GCC\\': \\'march=core-avx2\\'}'", "--packagepath='/cvmfs/soft.computecanada.ca/easybuild/packages'", "--parallel='8'", "--prefix='/cvmfs/soft.computecanada.ca/easybuild'", '--recursive-module-unload', "--repository='GitRepository'", "--repositorypath='/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo.git,2020'", "--robot-paths='/cvmfs/soft.computecanada.ca/easybuild/easyconfigs:/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/2020'", "--sourcepath='/cvmfs/soft.computecanada.ca/easybuild/sources'", "--subdir-modules='modules/2020'", "--subdir-software='software/2020'", "--subdir-user-modules='.local/easybuild/modules/2020'", "--suffix-modules-path=''", "--sysroot='/cvmfs/soft.computecanada.ca/gentoo/2020'", "--try-toolchain='GCCcore,9.3.0'", "--use-ccache='/cvmfs/local/ccache'", '--use-existing-modules', 'FALCON-1.8.8-intel-2019b-Python-2.7.16.eb'],
    "core_count": 16,
    "cpu_arch": "x86_64",
    "cpu_arch_name": "UNKNOWN",
    "cpu_model": "Intel Xeon Processor (Skylake, IBRS)",
    "cpu_speed": 2494.14,
    "cpu_vendor": "Intel",
    "easybuild-easyblocks_version": "4.3.3-r0b36e078a06f47dcbfea7a25ca64ae8c7686ef7e",
    "easybuild-framework_version": "4.3.3-r15719a0ece2011cea9ce176d1763cdc620b188f4",
    "gcc_version": "Using built-in specs.; COLLECT_GCC=/cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0/libexec/gcc/x86_64-pc-linux-gnu/9.3.0/lto-wrapper; OFFLOAD_TARGET_NAMES=nvptx-none; Target: x86_64-pc-linux-gnu; Configured with: ../configure --with-sysroot=/cvmfs/soft.computecanada.ca/gentoo/2020 --enable-languages=c,c++,fortran --without-cuda-driver --enable-offload-targets=nvptx-none --enable-lto --enable-checking=release --disable-multilib --enable-shared=yes --enable-static=yes --enable-threads=posix --enable-plugins --enable-gold=default --enable-ld --with-plugin-ld=ld.gold --prefix=/cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0 --with-local-prefix=/cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0 --enable-bootstrap --with-isl=/tmp/ebuser/avx2/GCCcore/9.3.0/system-system/gcc-9.3.0/stage2_stuff --build=x86_64-pc-linux-gnu --host=x86_64-pc-linux-gnu; Thread model: posix; gcc version 9.3.0 (GCC) ; ",
    "glibc_version": "2.30",
    "hostname": "build-node.computecanada.ca",
    "install_size": 12038625,
    "modules_tool": ('Lmod', '/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/libexec/lmod', '8.4.20'),
    "os_name": "centos linux",
    "os_type": "Linux",
    "os_version": "7.9.2009",
    "platform_name": "x86_64-unknown-linux",
    "python_version": "3.7.7 (default, May  5 2020, 15:36:34) ; [GCC 9.3.0]",
    "system_gcc_path": "/tmp/eb-909rgup_/tmpaw6pkzd9/gcc",
    "system_python_path": "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/2.7.18/bin/python",
    "timestamp": 1616443006,
    "total_memory": 60232,
}]
