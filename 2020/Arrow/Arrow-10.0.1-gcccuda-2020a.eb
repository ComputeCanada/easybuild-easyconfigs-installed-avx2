# Built with EasyBuild version 4.7.0-r906ea5725f2e1dfcbceaa79ded1950f683ff5e1b on 2023-04-18_19-08-29
easyblock = "CMakeMake"

name = 'Arrow'
version = "10.0.1"

homepage = "https://arrow.apache.org"
description = """Apache Arrow is a cross-language development platform for in-memory data."""

toolchain = {"name": "gcccuda", "version": "2020a"}
toolchainopts = {"cstd": "c++17"}

# Fetching from Github to obtain test data which is not part of released tarball
sources = [{
    'filename': 'apache-arrow-%(version)s.tar.gz',
    'git_config': {
        'url': 'https://github.com/apache',
        'repo_name': 'arrow',
        'tag': 'apache-arrow-%(version)s',
        'recursive': True,
        'keep_git_dir': False,
    },
}]
# Must use --disable-enforce-checksums as checksums are not reliable on a JIT created tarball

builddependencies = [
    ("CMake", "3.23.1"),
    ("Boost", "1.72.0"),
    ("SciPy-Stack", "2022a"),
    ("thrift", "0.16.0"),
    ("RapidJSON", "1.1.0"),
    ("protobuf", "3.21.3"),
]

# Order matters here, libarrow_python.so is built with symbols compatible with 3.9,
multi_deps = {"Python": ["3.10", "3.9", "3.8"]}

local_cmake_opts = " ".join([
    "-DARROW_COMPUTE=ON",
    "-DARROW_FILESYSTEM=ON",
    "-DARROW_CUDA=ON",
    "-DCMAKE_PREFIX_PATH=$EBROOTCUDA/lib64/stubs",
    "-DARROW_PLASMA=ON",
    "-DARROW_PARQUET=ON",
    "-DARROW_DATASET=ON",
    "-DARROW_HDFS=OFF",
    "-DARROW_S3=OFF",
    "-DARROW_CSV=ON",
    "-DARROW_JSON=ON",
    "-DARROW_WITH_ZSTD=ON",
    "-DZSTD_SOURCE=BUNDLED", # We must specify `ZSTD_SOURCE=BUNDLED` to ensure ZSTD is built from source.,
    "-DARROW_WITH_BZ2=ON",
    "-DARROW_WITH_LZ4=ON",
    "-DARROW_WITH_SNAPPY=ON",
    "-DARROW_WITH_BROTLI=ON",
    "-DARROW_WITH_ZLIB=ON",
    "-DARROW_BUILD_TESTS=OFF", # No GPU device to test on
    "-DCMAKE_BUILD_TYPE=Release",
    "-DBOOST_ROOT=$EBROOTBOOST",
    "-DPYTHON_EXECUTABLE=$EBROOTPYTHON/bin/python",
    "-DCMAKE_SKIP_RPATH=ON",
    "-DCMAKE_INSTALL_LIBDIR=lib", # Python bindings expect libs to be in `lib`.
    "-DARROW_USE_CCACHE=ON", # Arrow ccache nows works
])

local_exports = " && ".join([
    "export PYARROW_WITH_PLASMA=1",
    "export PYARROW_WITH_CUDA=1",
    "export PYARROW_WITH_PARQUET=1",
    "export PYARROW_WITH_DATASET=1",
    "export PYARROW_WITH_IPC=1",
    "export PYARROW_WITH_ZSTD=1",
    "export PYARROW_WITH_SNAPPY=1",
    "export PYARROW_WITH_BROTLI=1",
    'export PYARROW_CMAKE_OPTIONS="{}"'.format(local_cmake_opts),
    "export ARROW_HOME=%(installdir)s",
    "export PYARROW_BUILD_TYPE=Release",
    "export PYTHONPATH=%(installdir)s/lib/python%(pyshortver)s/site-packages:$PYTHONPATH",
    "export CMAKE_PREFIX_PATH=%(installdir)s:$CMAKE_PREFIX_PATH",
])

configopts = local_cmake_opts

installopts = (
      " && cd %(builddir)s/arrow*/python "
    + " && mkdir -p %(installdir)s/lib/python%(pyshortver)s/site-packages "
    + " && {} ".format(local_exports)
    + " && python setup.py build_ext --inplace "
    + " && python setup.py install --prefix=%(installdir)s "
)

start_dir = "cpp"
separate_build_dir = True

# No GPU device to test on. The tests were run with the version without CUDA.
# runtest = "unittest"

modextrapaths = {"EBPYTHONPREFIXES": ""}

sanity_check_paths = {
    "files": [
        "lib/libarrow.so",
        "lib/libplasma.so",
        "lib/libarrow_cuda.so",
        "lib/libparquet.so",
        "lib/libarrow_dataset.so",
    ],
    "dirs": [
        "include/arrow",
        "include/plasma",
        "include/parquet",
        "lib/python%(pyshortver)s/site-packages",
    ],
}

sanity_check_commands = [
    "python -c 'import pyarrow'",
    "python -c 'import pyarrow.plasma'",
    "python -c 'import pyarrow.cuda'",
    "python -c 'import pyarrow.parquet'",
    "python -c 'import pyarrow.dataset'",
    "python -c 'import pyarrow.csv'",
    "python -c 'import pyarrow.json'",
    "python -c 'import pyarrow.feather'",
]

modluafooter = """
if convertToCanonical(LmodVersion()) >= convertToCanonical("8.2.9") then
    extensions("pyarrow/{}")
end
""".format(version)
moduleclass = "data"

# Build statistics
buildstats = [{
    "build_time": 2922.71,
    "command_line": ['--add-system-to-minimal-toolchains', "--allow-loaded-modules='gentoo'", "--buildpath='/tmp/ebuser/avx2'", "--configfiles='/cvmfs/soft.computecanada.ca/easybuild/config.cfg,/cvmfs/soft.computecanada.ca/easybuild/config-gentoo.cfg'", "--containerpath='/cvmfs/soft.computecanada.ca/easybuild/containers'", "--cuda-compute-capabilities='6.0,7.0,7.5,8.0'", '--enforce-checksums', "--env-for-shebang='/cvmfs/soft.computecanada.ca/gentoo/2020/usr/bin/env -S'", "--filter-deps='Bison,CMake=:3.16.5[,flex,ncurses,libreadline,gzip,bzip2,zlib,binutils,M4,Autoconf,Automake,libtool,Autotools,Szip,libxml2,SQLite=:3.36[,cURL,Doxygen,expat=:2.2.5[,Mesa,libGLU,SWIG=:3.0.12],PCRE,libjpeg-turbo,LibTIFF,libpng,XZ,gettext,X11,pkg-config,pkgconf,libdrm,gperf,FLTK,fontconfig,freetype,GMP,GL2PS,GraphicsMagick,MPFR,libmatheval,Tcl,Tk,libX11,libXft,libXpm,libXext,libXt,makedepend,cairo,libiconv,FFmpeg,GLib,FLANN,hwloc=:2.4.0[,numactl,DBus,texinfo,libsndfile,Pango,Lua,FreeImage,zstd,util-linux,file,GTK+,libunwind,LAME,NASM,x264,x265,FriBidi,ASSIMP,libarchive,ImageMagick,Ghostscript,Tkinter,libtirpc,Zip,SDL2,GST-plugins-base,libevent,tcsh,time,libedit,libpciaccess,UnZip,Check,OpenSSL,giflib,libwebp,git'", "--filter-env-vars='LD_LIBRARY_PATH,LD_PRELOAD'", '--disable-fixed-installdir-naming-scheme', "--hide-deps='icc,ifort,GCCcore'", "--hide-toolchains='GCCcore,iompi,iomkl,gompic'", "--hooks='/cvmfs/soft.computecanada.ca/easybuild/cc_hooks_gentoo.py'", '--ignore-osdeps', "--include-module-naming-schemes='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/SoftCCHierarchicalMNS.py'", "--include-toolchains='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/toolchains/*.py'", "--installpath='/cvmfs/soft.computecanada.ca/easybuild'", '--minimal-toolchains', '--module-depends-on', '--module-extensions', "--module-naming-scheme='SoftCCHierarchicalMNS'", "--optarch='{\\'NVHPC\\': \\'tp=haswell\\', \\'Intel\\': \\'march=core-avx2 -axCore-AVX512\\', \\'GCC\\': \\'march=core-avx2\\'}'", "--packagepath='/cvmfs/soft.computecanada.ca/easybuild/packages'", "--parallel='8'", "--prefix='/cvmfs/soft.computecanada.ca/easybuild'", '--rebuild', '--recursive-module-unload', "--repository='GitRepository'", "--repositorypath='/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo.git,2020'", "--robot-paths='/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/2020:/cvmfs/soft.computecanada.ca/easybuild/easyconfigs'", "--sourcepath='/cvmfs/soft.computecanada.ca/easybuild/sources'", "--subdir-modules='modules/2020'", "--subdir-software='software/2020'", "--subdir-user-modules='.local/easybuild/modules/2020'", "--suffix-modules-path=''", "--sysroot='/cvmfs/soft.computecanada.ca/gentoo/2020'", "--use-ccache='/cvmfs/local/ccache'", '--use-existing-modules', '/cvmfs/soft.computecanada.ca/easybuild/easyconfigs/a/Arrow/Arrow-10.0.1-gcccuda-9.3.0.eb'],
    "core_count": 16,
    "cpu_arch": "x86_64",
    "cpu_arch_name": "UNKNOWN",
    "cpu_model": "Intel Xeon Processor (Skylake, IBRS)",
    "cpu_speed": 2494.14,
    "cpu_vendor": "Intel",
    "easybuild-easyblocks_version": "4.7.0-rf34b32b91c6ffb5e4edc92eab0c2b824d11600b3",
    "easybuild-framework_version": "4.7.0-r906ea5725f2e1dfcbceaa79ded1950f683ff5e1b",
    "gcc_version": "Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0/libexec/gcc/x86_64-pc-linux-gnu/9.3.0/lto-wrapper; OFFLOAD_TARGET_NAMES=nvptx-none; Target: x86_64-pc-linux-gnu; Configured with: ../configure --with-sysroot=/cvmfs/soft.computecanada.ca/gentoo/2020 --enable-languages=c,c++,fortran --without-cuda-driver --enable-offload-targets=nvptx-none --enable-lto --enable-checking=release --disable-multilib --enable-shared=yes --enable-static=yes --enable-threads=posix --enable-plugins --enable-gold=default --enable-ld --with-plugin-ld=ld.gold --prefix=/cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0 --with-local-prefix=/cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0 --enable-bootstrap --with-isl=/tmp/ebuser/avx2/GCCcore/9.3.0/system-system/gcc-9.3.0/stage2_stuff --build=x86_64-pc-linux-gnu --host=x86_64-pc-linux-gnu; Thread model: posix; gcc version 9.3.0 (GCC) ; ",
    "glibc_version": "2.30",
    "hostname": "build-node.computecanada.ca",
    "install_size": 383848553,
    "modules_tool": ('Lmod', '/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/libexec/lmod', '8.7.4'),
    "os_name": "CentOS Linux",
    "os_type": "Linux",
    "os_version": "7.9.2009",
    "platform_name": "x86_64-unknown-linux",
    "python_version": "3.7.7 (default, May  5 2020, 15:36:34) ; [GCC 9.3.0]",
    "system_gcc_path": "/cvmfs/soft.computecanada.ca/easybuild/software/2020/Core/gcccore/9.3.0/bin/gcc",
    "system_python_path": "/cvmfs/soft.computecanada.ca/easybuild/software/2020/avx2/Core/python/3.8.10/bin/python",
    "timestamp": 1681859308,
    "total_memory": 60232,
}]
