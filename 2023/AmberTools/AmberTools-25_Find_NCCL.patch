--- cmake/FindNCCL.cmake.orig	2025-05-25 12:08:57.084872860 +0000
+++ cmake/FindNCCL.cmake	2025-05-26 13:05:37.450679186 +0000
@@ -10,23 +10,10 @@
 # If NCCL is found, it also creates the "nccl" imported target which is set
 # up to use these paths.
 
-if(CUDA AND NOT HIP)
-    find_path(NCCL_INCLUDE_DIR NAMES nccl.h PATHS $ENV{NCCL_HOME}/include)
-    find_library(NCCL_LIBRARY NAMES nccl nccl-static PATHS $ENV{NCCL_HOME}/lib)
-
-    include(FindPackageHandleStandardArgs)
-    find_package_handle_standard_args(NCCL DEFAULT_MSG NCCL_INCLUDE_DIR NCCL_LIBRARY)
-
-    if(NCCL_FOUND)
-        add_library(nccl UNKNOWN IMPORTED)
-        set_property(TARGET nccl PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${NCCL_INCLUDE_DIR})
-        set_property(TARGET nccl PROPERTY IMPORTED_LOCATION ${NCCL_LIBRARY})
-    endif()
-endif()
+message(STATUS "Value of EBROOTNCCL: $ENV{EBROOTNCCL}")
 
-if(HIP)
-    find_path(NCCL_INCLUDE_DIR NAMES rccl.h PATHS $ENV{NCCL_HOME}/include)
-    find_library(NCCL_LIBRARY NAMES rccl PATHS $ENV{NCCL_HOME}/lib)
+	find_path(NCCL_INCLUDE_DIR NAMES nccl.h PATHS $ENV{EBROOTNCCL}/include)
+	find_library(NCCL_LIBRARY NAMES nccl nccl-static PATHS $ENV{EBROOTNCCL}/lib)
 
     include(FindPackageHandleStandardArgs)
     find_package_handle_standard_args(NCCL DEFAULT_MSG NCCL_INCLUDE_DIR NCCL_LIBRARY)
@@ -36,4 +23,3 @@
         set_property(TARGET nccl PROPERTY INTERFACE_INCLUDE_DIRECTORIES ${NCCL_INCLUDE_DIR})
         set_property(TARGET nccl PROPERTY IMPORTED_LOCATION ${NCCL_LIBRARY})
     endif()
-endif()

