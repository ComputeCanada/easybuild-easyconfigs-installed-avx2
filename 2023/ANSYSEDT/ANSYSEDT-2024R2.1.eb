# Built with EasyBuild version 5.1.0 on 2025-06-26_17-39-33
easyblock = 'Binary'

name = 'ANSYSEDT'
local_version = '2024R2'
local_update = '1'
local_subdir = '242'
version = '%s.%s' % ( local_version, local_update )

homepage = 'http://www.ansys.com'
description = """ANSYS simulation software enables organizations to confidently predict
    how their products will operate in the real world. We believe that every product is
    a promise of something greater."""

toolchain = SYSTEM

# unpack -> /tmp/ANSYSEDT/2024R2.1/system-system/{Electronics_242_linx64,Electronics_24.2.1_linx64}
sources = [
  '%s/ELECTRONICS_%s_LINX64.tgz' % (local_version, local_version),                    # ELECTRONICS_2024R2_LINX64.tgz
  '%s/ELECTRONICS_%s_LINX64.tgz' % (local_version, version),                          # ELECTRONICS_2024R2.1_LINX64.tgz
 #'%s/ELECTRONICS_LOCAL_HELP_%s.zip' % (local_version, local_version)                 # ELECTRONICS_LOCAL_HELP_2024R2.zip
]
# sha256sum -> /cvmfs/restricted.computecanada.ca/easybuild/sources/a/ANSYSEDT/2024R2/*
checksums = [
  'd06324b8e0ea192484e3bd80a919763bb4bde96105e5d9afcea47a7dab0de1a9',  # ELECTRONICS_2024R2_LINX64.tgz
  'c8b9bc09e4c5e15cb5c585aae459c4ee8cb3d5d4c375d04e5ad0407cbe0733c1',  # ELECTRONICS_2024R2.1_LINX64.tgz
 #'25fe69decf64c19cf670f4f1baac3f96fd5c25f8438e315794a4532cef214a4d'   # ELECTRONICS_LOCAL_HELP_2024R21.zip
]

# %(builddir)s=/tmp/ANSYSEDT/2024R2.1/system-system
# %(installdir)s=/home/roberpj/.local/easybuild/software/2023/x86-64-v3/Core/ansysedt/2024R2,
#  /cvmfs/restricted.computecanada.ca/easybuild/software/2023/x86-64-v3/Core/ansysedt/2024R2

extract_sources = True
#extract_sources = False
#install_cmd = "cp -av /tmp/AnsysEM/* %(installdir)s;"

install_cmd = "\
cd %(builddir)s/Electronics_242_linx64/Linux/AnsysEM/Disk1/InstData; pwd; ls -l;\
issfile=SilentInstallationTemplate.iss;\
licsrvr=license3.sharcnet.ca; sed -i \"s/pitrh6licsrv1/$licsrvr/g\" $issfile;\
tmpdiry=TempDirectory; sed -i \"s/\/scratch/$tmpdiry/g\" $issfile;\
rm -rf /tmp/AnsysEM; ./setup.exe -f \"$PWD/$issfile\" -i console;\
cd %(builddir)s/Electronics_24.2.1_linx64;\
./install_patch.bash --force_overwrite  --install_dir /tmp/AnsysEM;\
find /tmp/AnsysEM -type d -exec chmod 755 {} \;;\
find /tmp/AnsysEM -type f \( -name '*.so' -o -name '*.so.*' \) -exec chmod 755 {} \;;\
/cvmfs/soft.computecanada.ca/easybuild/bin/setrpaths.sh --path /tmp/AnsysEM;\
echo \"find /tmp/AnsysEM -ls\"; find /tmp/AnsysEM -ls;\
echo \"cp -av /tmp/AnsysEM/* %(installdir)s\";\
cp -av /tmp/AnsysEM/* %(installdir)s;"

postinstallcmds = [
  "find %(installdir)s -type d -exec chmod 755 {} \;",
  "find %(installdir)s -type f \( -name '*.so' -o -name '*.so.*' \) -exec chmod 755 {} \;",
  "/cvmfs/soft.computecanada.ca/easybuild/bin/setrpaths.sh --path %(installdir)s",
  "grep -rlI '/bin' %(installdir)s | while read a; do echo \"Considering binfile = \"$a\"\"; \
    sed -i \"s|#![[:space:]]*/bin/|#!$EPREFIX/bin/|g\" \"$a\"; \
    sed -i \"s|#![[:space:]]*/usr/bin/|#!$EPREFIX/usr/bin/|g\" \"$a\"; \
    sed -i \"s|#[[:space:]]!/usr/bin/|#!$EPREFIX/usr/bin/|g\" \"$a\"; \
    sed -i \"s|/bin:/usr/bin|$EPREFIX/bin:$EPREFIX/usr/bin|g\" \"$a\"; \
    sed -i \"s|/usr/bin:/bin|$EPREFIX/usr/bin:$EPREFIX/bin|g\" \"$a\"; \
    sed -i \"s|/sbin:/usr/sbin|$EPREFIX/sbin:$EPREFIX/usr/sbin|g\" \"$a\"; \
    sed -i \"s|/usr/sbin:/sbin|$EPREFIX/usr/sbin:$EPREFIX/sbin|g\" \"$a\"; \
    sed -i \"s|[[:space:]]/bin/| $EPREFIX/bin/|g\" \"$a\"; \
    sed -i \"s|'/bin/|'$EPREFIX/bin/|g\" \"$a\"; \
    sed -i \"s|\`/bin/|\`$EPREFIX/bin/|g\" \"$a\"; \
    sed -i \"s|\\\"/bin/|\\\"$EPREFIX/bin/|g\" \"$a\"; \
    sed -i \"s|\=/bin/|\=$EPREFIX/bin/|g\" \"$a\"; \
    sed -i \"s|^/bin/|$EPREFIX/bin/|g\" \"$a\"; \
    sed -i \"s|\:/bin/|\:$EPREFIX/bin/|g\" \"$a\"; \
    sed -i \"s|[[:space:]]/sbin/| $EPREFIX/sbin/|g\" \"$a\"; \
    sed -i \"s|'/sbin/|'$EPREFIX/sbin/|g\" \"$a\"; \
    sed -i \"s|\`/sbin/|\`$EPREFIX/sbin/|g\" \"$a\"; \
    sed -i \"s|\\\"/sbin/|\\\"$EPREFIX/sbin/|g\" \"$a\"; \
    sed -i \"s|\=/sbin/|\=$EPREFIX/sbin/|g\" \"$a\"; \
    sed -i \"s|^/sbin/|$EPREFIX/sbin/|g\" \"$a\"; \
    sed -i \"s|\:/sbin/|\:$EPREFIX/sbin/|g\" \"$a\"; \
    sed -i \"s|[[:space:]]/usr/bin| $EPREFIX/usr/bin|g\" \"$a\"; \
    sed -i \"s|'/usr/bin|'$EPREFIX/usr/bin|g\" \"$a\"; \
    sed -i \"s|\`/usr/bin|\`$EPREFIX/usr/bin|g\" \"$a\"; \
    sed -i \"s|\\\"/usr/bin|\\\"$EPREFIX/usr/bin|g\" \"$a\"; \
    sed -i \"s|=/usr/bin|=$EPREFIX/usr/bin|g\" \"$a\"; \
    sed -i \"s|^/usr/bin/|$EPREFIX/usr/bin/|g\" \"$a\"; \
    sed -i \"s|\:/usr/bin|\:$EPREFIX/usr/bin|g\" \"$a\"; \
    sed -i \"s|\(/usr/bin|\($EPREFIX/usr/bin|g\" \"$a\"; \
    sed -i \"s|\-/usr/bin|\-$EPREFIX/usr/bin|g\" \"$a\"; \
    sed -i \"s|\#/usr/bin|\#$EPREFIX/usr/bin|g\" \"$a\"; \
    sed -i \"s|\*/usr/bin|\*$EPREFIX/usr/bin|g\" \"$a\"; \
    sed -i \"s|[[:space:]]/usr/sbin| $EPREFIX/usr/sbin|g\" \"$a\"; \
    sed -i \"s|'/usr/sbin|'$EPREFIX/usr/sbin|g\" \"$a\"; \
    sed -i \"s|\`/usr/sbin|\`$EPREFIX/usr/sbin|g\" \"$a\"; \
    sed -i \"s|\\\"/usr/sbin|\\\"$EPREFIX/usr/sbin|g\" \"$a\"; \
    sed -i \"s|\=/usr/sbin|\=$EPREFIX/usr/sbin|g\" \"$a\"; \
    sed -i \"s|^/usr/sbin/|$EPREFIX/usr/sbin/|g\" \"$a\"; \
    sed -i \"s|\:/usr/sbin|\:$EPREFIX/usr/sbin|g\" \"$a\"; \
    sed -i \"s|\$(/usr/bin|\$($EPREFIX/usr/bin|g\" \"$a\"; done",
  "grep -rlI '/lib' %(installdir)s | while read a; do echo \"Considering libfile = \"$a\"\"; \
    sed -i \"s|[[:space:]]/lib[[:space:]]| |g\" \"$a\"; \
    sed -i \"s|[[:space:]]/usr/lib[[:space:]]| |g\" \"$a\"; \
    sed -i \"s|[[:space:]]/usr/lib64[[:space:]]| |g\" \"$a\"; \
    sed -i \"s|\`glxinfo|\`LD_LIBRARY_PATH=/usr/lib64/nvidia glxinfo|g\" \"$a\"; \
    sed -i \"s|X11_LIB_DIR=/usr.*|X11_LIB_DIR=/usr/X11R6/bin|g\" \"$a\"; \
    sed -i \"s|X11_LIB_DIR=\`echo.*|X11_LIB_DIR=/usr/X11R6/bin|g\" \"$a\"; \
    sed -i \"s|OGL_LIB_DIR=\\\"\$d\\\"|OGL_LIB_DIR=/usr/X11R6/bin|g\" \"$a\"; \
    sed -i \"s|LD_PRELOAD=\\\"\${SysLibStdCpp|# LD_PRELOAD=\\\"\${SysLibStdCpp|g\" \"$a\"; done",
  "cd %(installdir)s/v242/Linux64/defer; mkdir avoid; mv libX* avoid; cd ..; \
   mv rpm rpm-avoid; ln -s /cvmfs/soft.computecanada.ca/custom/bin/rpm rpm;",
]

modextravars = {
    'LM_PROJECT': 'research',
    'SLURM_ENABLED': '1',
    'NO_DEP_CHECK': '1',
    'ANS_IGNOREOS': '1',
    'SCHEDULER_TIGHT_COUPLING': '1',
    'ANS_FLEXLM_DISABLE_DEFLICPATH': '1',
}

modextrapaths = {
     'PATH': ['v%s/Linux64' % local_subdir],
}

sanity_check_paths = {
      'files': ['v%s/Linux64/ansysedt' % local_subdir],
      'dirs' : ['shared_files','v%s' % local_subdir],
}

modluafooter = """
require("SitePackage")
local found, path = find_and_define_license_file("__ANSYS_LICENSE_FILE", "ansys")
if (not found) then
	local error_message = [[
We did not find a suitable license for ANSYS. If you have access to one, you can create the file $HOME/.licenses/ansysedt.lic with the license information. If you think you should have access to one as part of your institution, please write to support@tech.alliancecan.ca so that we can configure it. For more information about configuring an ANSYS license, please see https://docs.alliancecan.ca/wiki/AnsysEDT

Nous n'avons pas trouve de licence utilisable pour ANSYS. Si vous avez acces a une licence de ANSYS, vous pouvez creer le fichier $HOME/.licenses/ansysedt.lic avec l'information de la licence. Si vous   pensez que vous devriez automatiquement avoir acces a une licence via votre institution, veuillez ecrire a support@tech.alliancecan.ca pour que nous puissions la configurer. Pour plus d'information sur la facon de configurer une licence pour ANSYS, veuillez consulter la page https://docs.alliancecan.ca/wiki/AnsysEDT/fr
	]]
	LmodError(error_message)
elseif (path) then
	-- load the license file which should contain Lua commands to set the license path
	assert(loadfile(path))()
end
"""

moduleclass = 'tools'

# Build statistics
buildstats = [{
    "build_time": 25270.65,
    "command_line": ['--add-system-to-minimal-toolchains', "--allow-loaded-modules='gentoo'", "--buildpath='/tmp/ebuser/avx2'", '--disable-cleanup-tmpdir', "--configfiles='/cvmfs/soft.computecanada.ca/easybuild/config.cfg,/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/2023/config.cfg'", "--containerpath='/cvmfs/soft.computecanada.ca/easybuild/containers'", "--cuda-compute-capabilities='6.0,7.0,7.5,8.0,8.6,9.0'", '--enforce-checksums', "--env-for-shebang='/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/bin/env -S'", "--filter-deps='Bison,CMake=:3.26.5],flex,ncurses,libreadline,gzip,bzip2,zlib,binutils,M4,Autoconf,Automake,libtool,Autotools,Szip,libxml2,SQLite=:3.42.0],cURL,Doxygen,expat=:2.5.0],Mesa,libGLU,PCRE,PCRE2,libjpeg-turbo,LibTIFF,libpng,XZ,gettext,X11,pkg-config,pkgconf,libdrm,gperf,FLTK,fontconfig,freetype,GMP,GL2PS,GraphicsMagick,MPFR,libmatheval,Tcl,Tk,libX11,libXft,libXpm,libXext,libXt,make,makedepend,cairo,libiconv,FFmpeg,GLib,FLANN,hwloc=:2.9.1[,numactl,DBus,texinfo,libsndfile,Pango,Lua,FreeImage,zstd,util-linux,file,GTK+,libunwind,LAME,NASM,x264,x265,FriBidi,ASSIMP,libarchive,ImageMagick,Ghostscript,Tkinter,libtirpc,Zip,SDL2,GST-plugins-base,libevent,tcsh,time,libedit,libpciaccess,UnZip,Check,OpenSSL,giflib,libwebp,git,libgit2,patchelf,snappy,re2c,double-conversion,HarfBuzz,graphite2,NSS,libffi,json-c,Xerces-C++,OpenEXR,OpenJPEG,Brotli,Highway,Tktable,yaml-cpp,fmt,Blosc,libgd,gawk,GLPK,makeinfo,matplotlib,glew,GLM,Z3,freeglut,minizip'", "--filter-env-vars='LD_LIBRARY_PATH,LD_PRELOAD'", '--disable-fixed-installdir-naming-scheme', '--force', "--hide-deps='icc,ifort,GCCcore'", "--hide-toolchains='GCCcore,iompi,iomkl,gompic'", "--hooks='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/2023/cc_hooks.py'", '--ignore-osdeps', "--include-easyblocks='/cvmfs/soft.computecanada.ca/easybuild/site-packages/custom-easyblocks/2023/easybuild/easyblocks/*/*.py'", "--include-module-naming-schemes='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/SoftCCHierarchicalMNS.py'", "--include-toolchains='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/toolchains/*.py'", "--installpath='/cvmfs/soft.computecanada.ca/easybuild'", "--installpath-software='/cvmfs/restricted.computecanada.ca/easybuild/software/2023'", "--job-cores='8'", "--job-eb-cmd='srun --mpi=none --ntasks=1 /cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/bin/eb'", '--disable-map-toolchains', '--minimal-toolchains', "--module-naming-scheme='SoftCCHierarchicalMNS'", "--optarch='{\\'NVHPC\\': \\'-march=x86-64-v3\\', \\'Intel\\': \\'-march=core-avx2 -axCore-AVX512\\', \\'GCC\\': \\'-march=x86-64-v3\\'}'", "--packagepath='/cvmfs/soft.computecanada.ca/easybuild/packages'", "--parallel='8'", "--prefix='/cvmfs/soft.computecanada.ca/easybuild'", '--recursive-module-unload', "--repository='GitRepository'", "--repositorypath='/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo.git,2023'", "--robot-paths='/cvmfs/soft.computecanada.ca/easybuild/site-packages/custom-easyconfigs/easybuild/easyconfigs:/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/2023:'", '--disable-rpath', "--sourcepath='/cvmfs/restricted.computecanada.ca/easybuild/sources'", "--sourcepath-data='/cvmfs/soft.computecanada.ca/easybuild/sources'", "--subdir-modules='modules/2023'", "--subdir-software='software/2023'", "--subdir-user-modules='.local/easybuild/modules/2023'", "--suffix-modules-path=''", "--sysroot='/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3'", "--testoutput='/shared_tmp/logs/easybuild-build/ANSYSEDT-2024R2.1'", "--tmp-logdir='/shared_tmp/logs'", "--use-ccache='/shared_tmp/local/ccache'", '--use-existing-modules', '/cvmfs/soft.computecanada.ca/easybuild/site-packages/custom-easyconfigs/easybuild/easyconfigs/a/ANSYSEDT/ANSYSEDT-2024R2.1.eb'],
    "core_count": 8,
    "cpu_arch": "x86_64",
    "cpu_arch_name": "cascadelake",
    "cpu_model": "Intel Xeon Processor (Skylake, IBRS)",
    "cpu_speed": 2494.136,
    "cpu_vendor": "Intel",
    "easybuild-easyblocks_version": "5.1.0",
    "easybuild-framework_version": "5.1.0",
    "gcc_version": "Using built-in specs.; COLLECT_GCC=/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/bin/gcc; COLLECT_LTO_WRAPPER=/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/libexec/gcc/x86_64-pc-linux-gnu/12/lto-wrapper; OFFLOAD_TARGET_NAMES=nvptx-none; Target: x86_64-pc-linux-gnu; Configured with: /cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/var/tmp/portage/sys-devel/gcc-12.3.1_p20230526/work/gcc-12-20230526/configure --host=x86_64-pc-linux-gnu --build=x86_64-pc-linux-gnu --prefix=/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr --bindir=/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/x86_64-pc-linux-gnu/gcc-bin/12 --includedir=/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/lib/gcc/x86_64-pc-linux-gnu/12/include --datadir=/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/share/gcc-data/x86_64-pc-linux-gnu/12 --mandir=/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/share/gcc-data/x86_64-pc-linux-gnu/12/man --infodir=/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/share/gcc-data/x86_64-pc-linux-gnu/12/info --with-gxx-include-dir=/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/lib/gcc/x86_64-pc-linux-gnu/12/include/g++-v12 --disable-silent-rules --disable-dependency-tracking --with-python-dir=/share/gcc-data/x86_64-pc-linux-gnu/12/python --enable-languages=c,c++,fortran --enable-obsolete --enable-secureplt --disable-werror --with-system-zlib --enable-nls --without-included-gettext --disable-libunwind-exceptions --enable-checking=release --with-bugurl=https://bugs.gentoo.org/ --with-pkgversion='Gentoo 12.3.1_p20230526 p2' --with-gcc-major-version-only --enable-libstdcxx-time --enable-lto --disable-libstdcxx-pch --enable-shared --enable-threads=posix --with-sysroot=/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3 --with-build-sysroot=/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3 --enable-__cxa_atexit --enable-clocale=gnu --disable-multilib --with-multilib-list=m64 --disable-fixed-point --enable-targets=all --enable-libgomp --disable-libssp --disable-libada --disable-cet --disable-systemtap --disable-valgrind-annotations --disable-vtable-verify --disable-libvtv --with-zstd --with-isl --disable-isl-version-check --disable-default-pie --disable-default-ssp --without-cuda-driver --enable-offload-targets=nvptx-none --with-build-config=bootstrap-lto; Thread model: posix; Supported LTO compression algorithms: zlib zstd; gcc version 12.3.1 20230526 (Gentoo 12.3.1_p20230526 p2) ; ",
    "glibc_version": "2.37",
    "hostname": "node1.int.archimedes.c3.ca",
    "install_size": 49193370728,
    "modules_tool": ('Lmod', '/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/libexec/lmod', '8.7.47'),
    "os_name": "AlmaLinux",
    "os_type": "Linux",
    "os_version": "9.4 (Seafoam Ocelot)",
    "platform_name": "x86_64-unknown-linux",
    "python_version": "3.11.4 (main, Nov  4 2023, 03:43:13) [GCC 12.3.1 20230526]",
    "system_gcc_path": "/tmp/eb-6u90j_xb/tmphd4pzu29/gcc",
    "system_python_path": "/cvmfs/soft.computecanada.ca/gentoo/2023/x86-64-v3/usr/bin/python",
    "timestamp": 1750959548,
    "total_memory": 29824,
}]
