# Built with EasyBuild version 4.2.1-reccde426790b53218b85aaac5d5891cb7ee0a908 on 2020-06-30_19-33-08
easyblock = "CMakeMake"

name = "arrow"
version = "0.17.1"

homepage = "https://arrow.apache.org"
description = """Apache Arrow is a cross-language development platform for in-memory data."""

# On AVX512, there is a bug with GCC 7.3.0
toolchain = {"name": "gcccuda", "version": "2019.3.102"}
toolchainopts = {"cstd": "c++17"}

# Fetching from Github to obtain test data which is not part of released tarball
sources = [{
    'filename': 'apache-arrow-%(version)s.tar.gz',
    'git_config': {
        'url': 'https://github.com/apache',
        'repo_name': 'arrow',
        'tag': 'apache-arrow-%(version)s',
        'recursive': True,
        'keep_git_dir': False,
    },
}]
# Must use --disable-enforce-checksums as checksums are not reliable on a JIT created tarball

builddependencies = [
    ("Boost", "1.68.0"),
    ("SciPy-Stack", "2019b"),
    ("CMake", "3.16.3"),
    ("thrift", "0.13.0"),
]

# Py2 bindings are not compat with Py3 bindings on libs. Bye bye Py2!
multi_deps_load_default = False
multi_deps = {"Python": ["3.6.3", "3.7.4", "3.8.0"]}

local_cmake_opts = " ".join([
    "-DARROW_PYTHON=ON",
    "-DARROW_CUDA=ON",
    "-DCMAKE_PREFIX_PATH=$EBROOTCUDA/lib64/stubs",
    "-DARROW_PLASMA=ON",
    "-DARROW_PARQUET=ON",
    "-DARROW_HDFS=OFF",
    "-DARROW_S3=OFF",
    "-DARROW_CSV=ON",
    "-DARROW_JSON=ON",
    "-DARROW_WITH_ZSTD=ON",
    "-DZSTD_SOURCE=BUNDLED", # We must specify `ZSTD_SOURCE=BUNDLED` to ensure ZSTD is built from source.,
    "-DARROW_WITH_BZ2=ON",
    "-DARROW_WITH_LZ4=ON",
    "-DARROW_WITH_SNAPPY=ON",
    "-DARROW_BUILD_TESTS=OFF", # No GPU device to test on
    "-DCMAKE_BUILD_TYPE=Release",
    "-DBOOST_ROOT=$EBROOTBOOST",
    "-DPYTHON_EXECUTABLE=$EBROOTPYTHON/bin/python",
    "-DCMAKE_SKIP_RPATH=ON",
    "-DCMAKE_INSTALL_LIBDIR=lib", # Python bindings expect libs to be in `lib`.
    "-DARROW_USE_CCACHE=ON", # Arrow ccache nows works
])

local_exports = " && ".join([
    "export PYARROW_WITH_PLASMA=1",
    "export PYARROW_WITH_CUDA=1",
    "export PYARROW_WITH_PARQUET=1",
    "export PYARROW_WITH_ZSTD=1",
    "export PYARROW_WITH_SNAPPY=1",
    'export PYARROW_CMAKE_OPTIONS="{}"'.format(local_cmake_opts),
    "export ARROW_HOME=%(installdir)s",
    "export PYARROW_BUILD_TYPE=Release",
    "export PYTHONPATH=%(installdir)s/lib/python%(pyshortver)s/site-packages:$PYTHONPATH",
])

configopts = local_cmake_opts

installopts = (
      " && cd %(builddir)s/arrow*/python "
    + " && mkdir -p %(installdir)s/lib/python%(pyshortver)s/site-packages "
    + " && {} ".format(local_exports)
    + " && python setup.py build_ext --inplace "
    + " && python setup.py install --prefix=%(installdir)s "
)

start_dir = "cpp"
separate_build_dir = True

# No GPU device to test on. The tests were run with the version without CUDA.
# runtest = "unittest"

modextrapaths = {"EBPYTHONPREFIXES": ""}

sanity_check_paths = {
    "files": [
        "lib/libarrow_python.so",
        "lib/libarrow.so",
        "lib/libplasma.so",
        "lib/libarrow_cuda.so",
        "lib/libparquet.so",
    ],
    "dirs": [
        "include/arrow",
        "include/plasma",
        "include/parquet",
        "lib/python%(pyshortver)s/site-packages",
    ],
}

sanity_check_commands = [
    "python -c 'import pyarrow'",
    "python -c 'import pyarrow.plasma'",
    "python -c 'import pyarrow.cuda'",
    "python -c 'import pyarrow.parquet'",
    "python -c 'import pyarrow.csv'",
    "python -c 'import pyarrow.json'",
    "python -c 'import pyarrow.feather'",
]

moduleclass = "data"

# Build statistics
buildstats = [{
    "build_time": 1294.45,
    "command_line": ['--add-system-to-minimal-toolchains', "--allow-loaded-modules='nixpkgs'", "--buildpath='/tmp/ebuser/avx2'", "--configfiles='/cvmfs/soft.computecanada.ca/easybuild/config.cfg'", "--containerpath='/cvmfs/soft.computecanada.ca/easybuild/containers'", "--filter-deps='Bison,CMake=:3.12.3[,flex,ncurses,libreadline,bzip2,zlib,binutils,M4,Autoconf,Automake,libtool,Autotools,Szip,libxml2,sparsehash,SQLite,cURL,Doxygen,expat=:2.2.5[,Mesa,libGLU,SWIG=:3.0.12[,PCRE,libjpeg-turbo,LibTIFF,libpng,XZ,ant,gettext,X11,pkg-config,LLVM=:6.0.1[,libdrm,gperf,FLTK,fontconfig,freetype,GMP,GL2PS,gnuplot,GraphicsMagick,MPFR,libmatheval,Tcl,Tk,CFITSIO,libX11,libXft,libXpm,libXext,makedepend,cairo,libiconv,FFmpeg,GLib,FLANN,hwloc,numactl,DBus,texinfo,libsndfile'", "--filter-env-vars='LD_LIBRARY_PATH,LD_PRELOAD'", '--disable-fixed-installdir-naming-scheme', "--hide-deps='icc,ifort,GCCcore'", "--hide-toolchains='GCCcore,iompi,iomkl'", "--hooks='/cvmfs/soft.computecanada.ca/easybuild/cc_hooks.py'", '--ignore-osdeps', "--include-module-naming-schemes='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/SoftCCHierarchicalMNS.py'", "--include-toolchains='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/toolchains/*.py'", "--installpath='/cvmfs/soft.computecanada.ca/easybuild'", '--minimal-toolchains', '--module-depends-on', "--module-naming-scheme='SoftCCHierarchicalMNS'", "--optarch='{\\'GCC\\': \\'march=core-avx2\\', \\'GCCcore\\': \\'GENERIC\\', \\'Intel\\': \\'xCore-AVX2\\', \\'PGI\\': \\'tp=haswell\\'}'", "--packagepath='/cvmfs/soft.computecanada.ca/easybuild/packages'", "--parallel='8'", "--prefix='/cvmfs/soft.computecanada.ca/easybuild'", '--recursive-module-unload', "--repository='GitRepository'", "--repositorypath='/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo.git,2017'", "--robot-paths='/cvmfs/soft.computecanada.ca/easybuild/easyconfigs:/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/2017'", "--sourcepath='/cvmfs/soft.computecanada.ca/easybuild/sources'", "--subdir-modules='modules/2017'", "--subdir-software='software/2017'", "--subdir-user-modules='.local/easybuild/modules/2017'", "--suffix-modules-path=''", "--use-ccache='/cvmfs/local/ccache'", '--use-existing-modules', 'arrow-0.17.1-gcccuda-2019.3.102.eb'],
    "core_count": 16,
    "cpu_arch": "x86_64",
    "cpu_arch_name": "UNKNOWN",
    "cpu_model": "Intel Xeon Processor (Skylake, IBRS)",
    "cpu_speed": 2095.078,
    "cpu_vendor": "Intel",
    "easybuild-easyblocks_version": "4.2.1-rf308263371c29f7ad4031dd06e1801f4eb48b800",
    "easybuild-framework_version": "4.2.1-reccde426790b53218b85aaac5d5891cb7ee0a908",
    "gcc_version": "Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/cvmfs/soft.computecanada.ca/nix/store/d8f5yq3axry49m4j8yd464gmrmz5l924-gfortran-8.3.0/libexec/gcc/x86_64-pc-linux-gnu/8.3.0/lto-wrapper; OFFLOAD_TARGET_NAMES=nvptx-none; Target: x86_64-pc-linux-gnu; Configured with: ; Thread model: posix; gcc version 8.3.0 (20190410 gcc-8-branch revision 270244) ; ",
    "glibc_version": "2.24",
    "hostname": "build-node.computecanada.ca",
    "install_size": 240898475,
    "modules_tool": ('Lmod', '/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/libexec/lmod', '8.3.8'),
    "os_name": "centos linux",
    "os_type": "Linux",
    "os_version": "7.8.2003",
    "platform_name": "x86_64-unknown-linux",
    "python_version": "2.7.13 (default, Dec 17 2016, 20:05:07) ; [GCC 5.4.0]",
    "system_gcc_path": "/cvmfs/soft.computecanada.ca/nix/var/nix/profiles/gcc-8.3.0/bin/gcc",
    "system_python_path": "/cvmfs/soft.computecanada.ca/easybuild/software/2017/Core/python/3.8.0/bin/python",
    "timestamp": 1593559987,
    "total_memory": 60232,
}]
