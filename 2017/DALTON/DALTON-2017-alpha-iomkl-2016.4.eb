# Built with EasyBuild version 3.6.0-r0f6ef255058df3faf632a6a5bf32696c8bf28b58 on 2018-06-10_13-45-11
##
# Author: Ali Kerrache, University of Manitoba.
# Date: May 28, 2018.
##

easyblock = 'MakeCp'

name = 'DALTON'
version = "2017-alpha"

homepage = 'http://daltonprogram.org/'
description = """The Dalton suite consists of two separate executables, Dalton and LSDalton. The Dalton code is a powerful tool for a wide range of molecular properties at different levels of theory, whereas LSDalton is a linear-scaling HF and DFT code suitable for large molecular systems, now also with some CCSD capabilites. Any published work arising from use of one of the Dalton programs must acknowledge that by a proper reference. The following list of capabilities of the Dalton programs should give you some indication of whether or not the Dalton suite is able to meet your requirements.."""

toolchain = {'name': 'iomkl', 'version': '2016.4'}
toolchainopts = {'usempi': True, 'openmp': True, 'pic': True}

# No direct download: download from GitLab using git clone:
# git clone --recursive https://gitlab.com/dalton/dalton.git
# mv dalton dalton-2017-alpha && tar -cvf dalton-2017-alpha.tar dalton-2017-alpha/
# gzip dalton-2017-alpha.tar

sources = ['%(namelower)s-%(version)s.tar.gz']
checksums = ['104e1b2e6d706864f691ddb9f4dac993']   # dalton-2017-alpha.tar.gz

builddependencies = [('CMake', '3.7.2')]

skipsteps = ['configure', 'install']

prebuildopts  = 'mkdir build && cd build && '
prebuildopts += '../setup --type release --fc mpif90 --cc mpicc --cxx mpicxx --mpi --omp '
prebuildopts += '--timings --coverage --csr --mkl=sequential --static '
prebuildopts += '--blas=auto --lapack=auto '
prebuildopts += '--blacs=openmpi  --scalapack . && '

postinstallcmds =  ['cd %(builddir)s/%(namelower)s-%(version)s/build && mkdir -p %(installdir)s/bin && cp dalton dalton.x %(installdir)s/bin/ && cp -r GIT_HASH ../VERSION  lib  ../DALTON/test tools basis %(installdir)s/']

files_to_copy = [
    (['build/dalton', 'build/dalton.x'], 'bin'), 
    'build/GIT_HASH', 'DALTON/test', 'build/lib', 'VERSION', 'basis', 'tools',
]

sanity_check_paths = {
    'files': ['bin/dalton', 'bin/dalton.x', 'VERSION'],
    'dirs': ['basis', 'lib', 'tools', 'test'],
}

modextrapaths = {
    'PATH': 'basis',
    'PATH': 'tools',
}

modextravars = {
    'BASLIB': '%(installdir)s/basis',
}

modloadmsg = """ For more information type / Pour plus d'information tapez: dalton -h

Note: Do not use / Ne pas utiliser : srun, mpirun, mpiexec

Command line / Ligne de commande:

  dalton [options] dalinp{.dal} [molinp{.mol} [potinp{.pot}] 

To include the atomic basis add the option / Pour inclure les bases atomiques, ajoutez l'option:
  
  -b ${BASLIB}

Example using 2 cores / Exemple avec 2 processeurs:

  dalton  -b ${BASLIB} -N 2 -dal dft_rspexci_nosym.dal -mol H2O_cc-pVDZ_nosym.mol

"""

moduleclass = 'chem'

# Build statistics
buildstats = [{
    "build_time": 468.69,
    "command_line": ['--add-dummy-to-minimal-toolchains', "--allow-loaded-modules='nixpkgs'", "--buildpath='/dev/shm/ebuser/avx2'", "--configfiles='/cvmfs/soft.computecanada.ca/easybuild/config.cfg'", "--containerpath='/cvmfs/soft.computecanada.ca/easybuild/containers'", "--filter-deps='Bison,CMake,flex,ncurses,libreadline,bzip2,zlib,binutils,M4,Autoconf,Automake,libtool,Autotools,Szip,libxml2,sparsehash,SQLite,cURL,Doxygen,expat,Mesa,libGLU,SWIG,PCRE,libjpeg-turbo,LibTIFF,libpng,XZ,ant,gettext,X11,pkg-config,LLVM,libdrm,gperf,FLTK,fontconfig,freetype,GMP,GL2PS,gnuplot,GraphicsMagick,MPFR,libmatheval,Tcl,Tk,CFITSIO,libX11,libXft,libXpm,libXext,makedepend,cairo,libiconv,FFmpeg,GLib,FLANN'", "--filter-env-vars='LD_LIBRARY_PATH,LD_PRELOAD'", "--hide-deps='icc,ifort,GCCcore'", "--hide-toolchains='GCCcore,iompi,iomkl'", '--ignore-osdeps', "--installpath='/cvmfs/soft.computecanada.ca/easybuild'", '--minimal-toolchains', '--module-depends-on', "--module-naming-scheme='SoftCCHierarchicalMNS'", "--optarch='{\\'GCC\\': \\'march=core-avx2\\', \\'Intel\\': \\'xCore-AVX2\\', \\'GCCcore\\': \\'GENERIC\\'}'", "--packagepath='/cvmfs/soft.computecanada.ca/easybuild/packages'", "--parallel='8'", "--prefix='/cvmfs/soft.computecanada.ca/easybuild'", '--recursive-module-unload', "--repository='GitRepository'", "--repositorypath='/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo.git'", "--robot-paths='/cvmfs/soft.computecanada.ca/easybuild/easyconfigs:/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo'", "--sourcepath='/cvmfs/soft.computecanada.ca/easybuild/sources'", "--subdir-modules='modules/2017'", "--subdir-software='software/2017'", "--subdir-user-modules='.local/easybuild/modules/2017'", "--suffix-modules-path=''", "--use-ccache='/cvmfs/local/ccache'", 'DALTON-2017-alpha-iomkl-2016.4.eb'],
    "core_count": 56,
    "cpu_model": "Intel(R) Xeon(R) CPU E5-2680 v4 @ 2.40GHz",
    "cpu_speed": 2399.994,
    "cpu_vendor": "Intel",
    "easybuild-easyblocks_version": "3.6.0-r87b12bf1f0fe3b493ad30a490630fc249b45ba90",
    "easybuild-framework_version": "3.6.0-r0f6ef255058df3faf632a6a5bf32696c8bf28b58",
    "gcc_version": "Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/cvmfs/soft.computecanada.ca/nix/store/lvjwgn6hpngyy6k4xqcqa9h2cxy3fl30-gfortran-5.4.0/libexec/gcc/x86_64-unknown-linux-gnu/5.4.0/lto-wrapper; Target: x86_64-unknown-linux-gnu; Configured with: ; Thread model: posix; gcc version 5.4.0 (GCC) ; ",
    "glibc_version": "2.24",
    "hostname": "build-node",
    "install_size": 315578856,
    "modules_tool": ('Lmod', '/cvmfs/soft.computecanada.ca/nix/var/nix/profiles/16.09/lmod/lmod/libexec/lmod', '7.7.4'),
    "os_name": "centos linux",
    "os_type": "Linux",
    "os_version": "7.4.1708",
    "platform_name": "x86_64-unknown-linux",
    "python_version": "2.7.13 (default, Dec 17 2016, 20:05:07) ; [GCC 5.4.0]",
    "system_gcc_path": "/cvmfs/soft.computecanada.ca/nix/var/nix/profiles/gcc-5.4.0/bin/gcc",
    "system_python_path": "/cvmfs/soft.computecanada.ca/nix/var/nix/profiles/16.09/bin/python",
    "timestamp": 1528638310,
    "total_memory": 241657,
}]
