--- ./util/misc/run_STAR_via_samples_file.pl.orig	2017-10-07 01:15:42.000000000 +0000
+++ ./util/misc/run_STAR_via_samples_file.pl	2017-11-27 19:57:01.536942322 +0000
@@ -8,6 +8,7 @@
 use Pipeliner;
 use File::Basename;
 use Cwd;
+use List::Util qw(min);
 
 use Carp;
 use Getopt::Long qw(:config no_ignore_case bundling pass_through);
@@ -19,11 +20,12 @@
 #
 #  Required:
 #  --genome <string>           target genome to align to
-#  --gtf <string>              annotations in gtf format
 #  --samples_file  <string>    trinity samples file
 #  
-#  Optional:
+#  Optional
+#  --gtf <string>              annotations in gtf format
 #  --CPU <int>                 number of threads (default: 2)
+#  --nameSorted                sort bam by name instead of coordinate
 #
 #######################################################################
 
@@ -40,17 +42,18 @@
 
 my $help_flag;
 my $gtf_file;
-
+my $nameSorted;
 
 &GetOptions( 'h' => \$help_flag,
              'genome=s' => \$genome,
              'samples_file=s' => \$samples_file,
              'CPU=i' => \$CPU,
              'gtf=s' => \$gtf_file,
+             'nameSorted' => \$nameSorted,
     );
 
 
-unless ($genome && $samples_file && $gtf_file) {
+unless ($genome && $samples_file) {
     die $usage;
 }
 
@@ -74,9 +77,18 @@
 	
     ## ensure all full paths
     $genome = &Pipeliner::ensure_full_path($genome);
-    $gtf_file = &Pipeliner::ensure_full_path($gtf_file);
+    $gtf_file = &Pipeliner::ensure_full_path($gtf_file) if $gtf_file;
+    
 
-        
+    my $num_contigs = `grep '>' $genome | wc -l`;
+    chomp $num_contigs;
+    $num_contigs = int($num_contigs);
+    unless ($num_contigs > 0) {
+        die "Error, couldn't determine the number of contigs in genome: $genome  ... shouldn't happen. ";
+    }
+
+    my $genomeChrBinNbits = min(18, int(log((-s $genome) / $num_contigs) / log(2) + 0.5) );
+    
     my @read_sets = &parse_samples_file($samples_file);    
 
     my $pipeliner = new Pipeliner(-verbose => 1);
@@ -89,10 +101,15 @@
     
     my $cmd = "$star_prog --runThreadN $CPU --runMode genomeGenerate --genomeDir $star_index "
         . " --genomeFastaFiles $genome "
-        . " --limitGenomeGenerateRAM 40419136213 "
-        . " --sjdbGTFfile $gtf_file "
-        . " --sjdbOverhang 150 ";
+        . " --genomeChrBinNbits $genomeChrBinNbits "
+        . " --limitGenomeGenerateRAM 40419136213 ";
+        
+    if ($gtf_file) {
 
+        $cmd .= " --sjdbGTFfile $gtf_file "
+            .  " --sjdbOverhang 150 ";
+    }            
+        
     $pipeliner->add_commands( new Command($cmd, $star_index_chkpt));
 
     $pipeliner->run();
@@ -101,14 +118,25 @@
     unless (-d $checkpoint_dir) {
         mkdir($checkpoint_dir) or die "Error, cannot mkdir $checkpoint_dir";
     }
-            
+
+
+    my $sort_opt = "SortedByCoordinate";
+    my $sort_token = "c";
+    my $bam_outfile = "Aligned.sortedByCoord.out.bam";
+    if ($nameSorted) {
+        $sort_opt = "Unsorted";
+        $sort_token = "n";
+        $bam_outfile = "Aligned.out.bam";
+    }
+    
+    
     foreach my $read_set_aref (@read_sets) {
         my ($sample_id, $left_fq, $right_fq) = @$read_set_aref;
             
         my $cmd = "$star_prog "
             . " --runThreadN $CPU "
             . " --genomeDir $star_index "
-            . " --outSAMtype BAM SortedByCoordinate "
+            . " --outSAMtype BAM $sort_opt "
             . " --runMode alignReads "
             . " --readFilesIn $left_fq $right_fq "
             . " --twopassMode Basic "
@@ -122,13 +150,14 @@
         
         $pipeliner->add_commands( new Command($cmd, "$checkpoint_dir/star_align.$sample_id." . basename($genome) . ".ok") );
         
-        my $bam_outfile = "Aligned.sortedByCoord.out.bam";
-        my $renamed_bam_outfile = "$sample_id.cSorted.star." . basename($genome) . ".bam";
+        my $renamed_bam_outfile = "$sample_id.${sort_token}Sorted.star." . basename($genome) . ".bam";
         $pipeliner->add_commands( new Command("mv $bam_outfile $renamed_bam_outfile", "$checkpoint_dir/$renamed_bam_outfile.ok") );
+
+        unless ($nameSorted) {
+            $pipeliner->add_commands( new Command("samtools index $renamed_bam_outfile", "$checkpoint_dir/$renamed_bam_outfile.bai.ok") );
+        }
+        
         
-        $pipeliner->add_commands( new Command("samtools index $renamed_bam_outfile", "$checkpoint_dir/$renamed_bam_outfile.bai.ok") );
-    
-    
         $pipeliner->run();
     }
     
@@ -165,6 +194,9 @@
         my @x = split(/\t/);
         my ($cond, $rep, $fq_a, $fq_b) = @x;
 
+        $fq_a = &Pipeliner::ensure_full_path($fq_a);
+        $fq_b = &Pipeliner::ensure_full_path($fq_b) if $fq_b;
+        
         push (@samples, [$rep, $fq_a, $fq_b]);
     }
     close $fh;
