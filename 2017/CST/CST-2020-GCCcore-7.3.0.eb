# Built with EasyBuild version 4.2.2-r64415f53d9bdff498788ce494f68a98641a3883d on 2020-07-20_23-05-01
easyblock = 'PackedBinary'
name = 'CST'
version = '2020'
homepage = 'https://www.cst.com/'
description = """CST offers accurate, efficient computational solutions for electromagnetic design and analysis. CST simulation is user-friendly and enables users to choose the most appropriate method for the design and optimization of devices operating in a wide range of frequencies. Please note that we installed only Graphic frontend and command line interface. You need to provide your own license server in order to be able to run CST. """

toolchain = {'name': 'GCCcore', 'version': '7.3.0'}

sources = ['%(name)s_S2_%(version)s.SIMULIA_CST_Studio_Suite.Linux64.tar.gz']
checksums = ['b94b0f98a5c277717978c67a6fed491c']
builddependencies = [('Java', '1.8.0_192')]
dependencies = [('Qt5', '5.12.3')]
install_cmd = 'cd SIMULIA_CST_Studio_Suite.Linux64 ; tar xjf Opera_RHEL7.tar.bz2; tar -xjf SIMULIA_CST_License_Server_for_Opera.tar.bz2; echo "CHOSEN_FEATURE_LIST=Frontend" > installer.properties ; '
install_cmd += 'echo "CHOSEN_INSTALL_FEATURE_LIST=Frontend" >> installer.properties ; ' 
install_cmd += 'echo "CHOSEN_INSTALL_SET=Custom" >> installer.properties ; '
install_cmd += 'echo "LICENSE_TYPE=floating" >> installer.properties ; '
install_cmd += 'echo "LICENSE_TYPE_1=" >> installer.properties ; '
install_cmd += 'echo "LICENSE_TYPE_2=Point to an existing CST license server system" >> installer.properties ; '
install_cmd += 'echo "LICENSE_TYPE_BOOLEAN_1=0" >> installer.properties ; '
install_cmd += 'echo "LICENSE_TYPE_BOOLEAN_2=1" >> installer.properties ; '
install_cmd += 'echo "LICENSE_SERV_INPUT=cst@local" >> installer.properties ; '
install_cmd += 'echo "LICENSE_SERV_INPUT_1=cst@local" >> installer.properties ; '
install_cmd += 'echo "LICENSE_SERV_INPUT_BOOLEAN_1=" >> installer.properties ; '
install_cmd += 'echo "USER_INSTALL_DIR=%(installdir)s" >> installer.properties ; '
install_cmd += 'export CHECK_DISK_SPACE=OFF && ./install.sh --replay installer.properties --nogui --no-pkg-check ; '
postinstallcmds = [ 'cp -r SIMULIA_CST_Studio_Suite.Linux64/Opera_2020 %(installdir)s ; ' ]
postinstallcmds += [ '/cvmfs/soft.computecanada.ca/easybuild/bin/setrpaths.sh --path %(installdir)s/LinuxAMD64' ]
sanity_check_paths = {
      'files': ['LinuxAMD64/cst_design_environment_AMD64.exe','LinuxAMD64/cst_design_environment_gui_AMD64','LinuxAMD64/cst_boardcheck_AMD64', 'Opera_2020/code/bin/operafea-manager'],
      'dirs': []
}
moduleclass = 'math'

modluafooter = """
prepend_path("QT_QPA_PLATFORM_PLUGIN_PATH", "$EBROOTQT5/plugins/platforms/")
prepend_path("PATH", "LinuxAMD64")
prepend_path("PATH", "Opera_2020/code/bin")
require("SitePackage")
local found, path = find_and_define_license_file("CSTD_LICENSE_FILE","cst")
if (not found) then
        local error_message = [[
	We did not find a suitable license for CST-Studio. If you have access to one, you can create the file $HOME/.licenses/cst.lic  with the license information. If you think you should have access to one as    part of your institution, please write to support@computecanada.ca so that we can configure it.

	Nous n'avons pas trouve de licence utilisable pour CST-Studio. Si vous avez acces a une licence de CST-Studio, vous pouvez creer le fichier $HOME/.licenses/cst.lic avec l'information de la licence. Si vous    pensez que vous devriez automatiquement avoir acces a une licence via votre institution, veuillez ecrire a support@calculcanada.ca pour que nous puissions la configurer.
	]]
	LmodError(error_message)
end
"""

# Build statistics
buildstats = [{
    "build_time": 1318.2,
    "command_line": ['--add-system-to-minimal-toolchains', "--allow-loaded-modules='nixpkgs'", "--buildpath='/tmp/ebuser/avx2'", "--configfiles='/cvmfs/soft.computecanada.ca/easybuild/config.cfg'", "--containerpath='/cvmfs/soft.computecanada.ca/easybuild/containers'", '--enforce-checksums', "--filter-deps='Bison,CMake=:3.12.3[,flex,ncurses,libreadline,bzip2,zlib,binutils,M4,Autoconf,Automake,libtool,Autotools,Szip,libxml2,sparsehash,SQLite,cURL,Doxygen,expat=:2.2.5[,Mesa,libGLU,SWIG=:3.0.12[,PCRE,libjpeg-turbo,LibTIFF,libpng,XZ,ant,gettext,X11,pkg-config,LLVM=:6.0.1[,libdrm,gperf,FLTK,fontconfig,freetype,GMP,GL2PS,gnuplot,GraphicsMagick,MPFR,libmatheval,Tcl,Tk,CFITSIO,libX11,libXft,libXpm,libXext,makedepend,cairo,libiconv,FFmpeg,GLib,FLANN,hwloc,numactl,DBus,texinfo,libsndfile,Pango,Lua,FreeImage'", "--filter-env-vars='LD_LIBRARY_PATH,LD_PRELOAD'", '--disable-fixed-installdir-naming-scheme', "--hide-deps='icc,ifort,GCCcore'", "--hide-toolchains='GCCcore,iompi,iomkl'", "--hooks='/cvmfs/soft.computecanada.ca/easybuild/cc_hooks_nix.py'", '--ignore-osdeps', "--include-module-naming-schemes='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/SoftCCHierarchicalMNS.py'", "--include-toolchains='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/toolchains/*.py'", "--installpath='/cvmfs/soft.computecanada.ca/easybuild'", '--minimal-toolchains', '--module-depends-on', "--module-naming-scheme='SoftCCHierarchicalMNS'", "--optarch='{\\'GCC\\': \\'march=core-avx2\\', \\'GCCcore\\': \\'GENERIC\\', \\'Intel\\': \\'xCore-AVX2\\', \\'PGI\\': \\'tp=haswell\\'}'", "--packagepath='/cvmfs/soft.computecanada.ca/easybuild/packages'", "--parallel='8'", "--prefix='/cvmfs/soft.computecanada.ca/easybuild'", '--recursive-module-unload', "--repository='GitRepository'", "--repositorypath='/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo.git,2017'", "--robot-paths='/cvmfs/soft.computecanada.ca/easybuild/easyconfigs:/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/2017'", "--sourcepath='/cvmfs/soft.computecanada.ca/easybuild/sources'", "--subdir-modules='modules/2017'", "--subdir-software='software/2017'", "--subdir-user-modules='.local/easybuild/modules/2017'", "--suffix-modules-path=''", "--use-ccache='/cvmfs/local/ccache'", '--use-existing-modules', '/home/aroudgar/src/cst/cst-2020.eb'],
    "core_count": 16,
    "cpu_arch": "x86_64",
    "cpu_arch_name": "UNKNOWN",
    "cpu_model": "Intel Xeon Processor (Skylake, IBRS)",
    "cpu_speed": 2494.14,
    "cpu_vendor": "Intel",
    "easybuild-easyblocks_version": "4.2.2-r7b6e892e7d641644ae416a9c83c43c32c4256b5f",
    "easybuild-framework_version": "4.2.2-r64415f53d9bdff498788ce494f68a98641a3883d",
    "gcc_version": "Using built-in specs.; COLLECT_GCC=/cvmfs/soft.computecanada.ca/nix/var/nix/profiles/gcc-7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/cvmfs/soft.computecanada.ca/nix/store/c9qaklf3dvjvlbky3fiakmafb1p8l106-gfortran-7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; OFFLOAD_TARGET_NAMES=nvptx-none; Target: x86_64-pc-linux-gnu; Configured with: ; Thread model: posix; gcc version 7.3.0 (GCC) ; ",
    "glibc_version": "2.24",
    "hostname": "build-node.computecanada.ca",
    "install_size": 29004804478,
    "modules_tool": ('Lmod', '/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/libexec/lmod', '8.3.8'),
    "os_name": "centos linux",
    "os_type": "Linux",
    "os_version": "7.8.2003",
    "platform_name": "x86_64-unknown-linux",
    "python_version": "2.7.13 (default, Dec 17 2016, 20:05:07) ; [GCC 5.4.0]",
    "system_gcc_path": "/tmp/eb-TKoQ2N/tmp24bk8y/gcc",
    "system_python_path": "/cvmfs/soft.computecanada.ca/nix/var/nix/profiles/16.09/bin/python",
    "timestamp": 1595286213,
    "total_memory": 60232,
}]
