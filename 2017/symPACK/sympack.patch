--- ./cmake/gasnet.cmake.orig	2019-03-13 19:30:06.961150008 +0000
+++ ./cmake/gasnet.cmake	2019-03-15 17:06:43.229369305 +0000
@@ -25,7 +25,7 @@
 else()
 
   set(GASNET_NAME gasnet)
-  set(GASNET_URL https://gasnet.lbl.gov/)
+  set(GASNET_URL https://gasnet.lbl.gov/download)
   set(GASNET_GZ  GASNet-1.26.3.tar.gz)
   set(GASNET_MD5 "93ab985881ca19de319bb73583c385d2")
   set(GASNET_CFLAGS "${CMAKE_C_FLAGS} -DGASNETI_PSHM_BARRIER_HIER=0")
@@ -35,14 +35,14 @@
     URL ${GASNET_URL}/${GASNET_GZ}
     URL_MD5 ${GASNET_MD5}
     #URL ${PROJECT_SOURCE_DIR}/tarballs/${GASNET_GZ}
-    INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/external/gasnet_install
+    INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
     CONFIGURE_COMMAND <SOURCE_DIR>/configure --enable-pshm-hugetlbfs --enable-pshm-xpmem --enable-pshm --disable-pshm-posix --enable-aries --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} MPI_CC=${MPI_C_COMPILER} CFLAGS=${GASNET_CFLAGS} CXXFLAGS=${CMAKE_CXX_FLAGS}
 
         )
   
   
-    set(GASNET_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/external/gasnet_install/include)
-    set(GASNET_LIBRARY_PATH ${CMAKE_CURRENT_BINARY_DIR}/external/gasnet_install/lib)
+    set(GASNET_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
+    set(GASNET_LIBRARY_PATH ${CMAKE_INSTALL_PREFIX}/lib)
     ExternalProject_Get_Property(${GASNET_NAME} install_dir)
     add_library(libgasnet-conduit STATIC IMPORTED)
     set(GASNET_DEFINES "")
@@ -66,14 +66,14 @@
         URL ${GASNET_URL}/${GASNET_GZ}
         URL_MD5 ${GASNET_MD5}
   #      URL ${PROJECT_SOURCE_DIR}/tarballs/${GASNET_GZ}
-        INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/external/gasnet_install
+    INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
         CONFIGURE_COMMAND <SOURCE_DIR>/configure --prefix=<INSTALL_DIR> CC=${CMAKE_C_COMPILER} CXX=${CMAKE_CXX_COMPILER} MPI_CC=${MPI_C_COMPILER} CFLAGS=${GASNET_CFLAGS} CXXFLAGS=${CMAKE_CXX_FLAGS}
 
 
         )
   
-    set(GASNET_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/external/gasnet_install/include)
-    set(GASNET_LIBRARY_PATH ${CMAKE_CURRENT_BINARY_DIR}/external/gasnet_install/lib)
+    set(GASNET_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
+    set(GASNET_LIBRARY_PATH ${CMAKE_INSTALL_PREFIX}/lib)
     
     ExternalProject_Get_Property(${GASNET_NAME} install_dir)
     add_library(libgasnet-conduit STATIC IMPORTED)
--- ./cmake/upcxx.cmake.orig	2019-03-13 20:51:17.139535447 +0000
+++ ./cmake/upcxx.cmake	2019-03-15 17:07:37.918449099 +0000
@@ -16,13 +16,13 @@
   add_library(upcxx STATIC IMPORTED)
   else()
 set(UPCXX_NAME upcxx)
-  set(UPCXX_REPO https://bitbucket.org/upcxx/upcxx.git)
+  set(UPCXX_REPO https://github.com/brycelelbach/upcxx.git)
 
   ExternalProject_Add(${UPCXX_NAME}
       DEPENDS ${GASNET_NAME}
       GIT_REPOSITORY ${UPCXX_REPO}
       UPDATE_COMMAND ""
-      INSTALL_DIR ${CMAKE_CURRENT_BINARY_DIR}/external/upcxx_install
+      INSTALL_DIR ${CMAKE_INSTALL_PREFIX}
       CONFIGURE_COMMAND <SOURCE_DIR>/configure --prefix=<INSTALL_DIR> --with-gasnet=${GASNET_CONDUIT} CC=${MPI_C_COMPILER} CXX=${MPI_CXX_COMPILER} CFLAGS=${CMAKE_C_FLAGS} CXXFLAGS=${CMAKE_CXX_FLAGS}
       )
 
@@ -36,8 +36,8 @@
       )
 
 
-set(UPCXX_INCLUDE_DIR ${CMAKE_CURRENT_BINARY_DIR}/external/upcxx_install/include)
-set(UPCXX_LIBRARY_PATH ${CMAKE_CURRENT_BINARY_DIR}/external/upcxx_install/lib)
+set(UPCXX_INCLUDE_DIR ${CMAKE_INSTALL_PREFIX}/include)
+set(UPCXX_LIBRARY_PATH ${CMAKE_INSTALL_PREFIX}/lib)
 
 
 ##comming from the set var.sh upc++ script
--- ./CMakeLists.txt.orig	2019-03-14 18:34:40.242791169 +0000
+++ ./CMakeLists.txt	2019-03-15 18:53:51.473804915 +0000
@@ -322,8 +322,8 @@
 endif()
 
 list(GET UPCXX_INCLUDE_DIR 0 TMPUPCXXDIR)
-file(APPEND "sympack.mak.cmake" "\ninclude ${TMPUPCXXDIR}/upcxx.mak\n")
-file(APPEND "sympack.mak.cmake" "VPATH=${TMPUPCXXDIR}\n\n")
+file(APPEND "sympack.mak.cmake" "\ninclude ${CMAKE_INSTALL_PREFIX}/include/upcxx.mak\n")
+file(APPEND "sympack.mak.cmake" "VPATH=${CMAKE_INSTALL_PREFIX}\n\n")
 file(APPEND "sympack.mak.cmake" "SYMPACK_INCLUDE += \$(UPCXX_CXXFLAGS)\n\n")
 file(APPEND "sympack.mak.cmake" "SYMPACK_LIB = -L\$(SYMPACK_DIR)/lib -lsympack\n")
 
--- ./include/sympack/mpi_interf.hpp.orig	2019-03-20 21:22:15.310013960 +0000
+++ ./include/sympack/mpi_interf.hpp	2019-03-20 21:22:40.770051020 +0000
@@ -158,7 +158,7 @@
     max_sr_size = std::max(max_sr_size,globalMax);
 
     if(is_signed){
-        for(int i = 0; i<mpisize;i++){ rtotcounts[i] = std::abs(rtotcounts[i]); }
+        for(int i = 0; i<mpisize;i++){ rtotcounts[i] = std::abs((double)rtotcounts[i]); }
     }
     else{
       //redo the alltoall to get rid of the error flags
