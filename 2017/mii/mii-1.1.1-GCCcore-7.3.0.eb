# Built with EasyBuild version 4.4.2-r70243fd7e2a672699d8f1af6e2283e599943b20b on 2021-09-30_17-35-36
#EasyBuild easyconfig
import os

easyblock = 'ConfigureMake'

name = 'mii'
version = '1.1.1'

homepage = 'https://github.com/codeandkey/mii'
description = """A smart search engine for module environments."""

toolchain = {'name': 'GCCcore', 'version': '7.3.0'}

source_urls = ['https://github.com/codeandkey/mii/archive']
sources = ['v%(version)s.tar.gz']
patches = [
    'mii-1.1.0-localization.patch',
    'mii-1.1.1-fix_arguments_with_spaces.patch', 
    'mii-1.1.1-remove-duplicates.patch',
]
checksums = [
    '4ad0eccb1d8996072a47dd9e207f8997a91511992b24d3fde959e628328cfb66',  # v1.1.1.tar.gz
    '08b8fa1971ec3c1002509a1100a5e481128d16ba0f4a317a26fc85b423486f59',  # mii-1.1.0-localization.patch
    '67dd186a74040f0430bf3bd7c00849ca7d33e8deb4963ae1debb7d3f5af4ebdf',  # mii-1.1.1-fix_arguments_with_spaces.patch
    'af147980a430f88c28ed4b10389b170bae04e6918670d481972358e488e9d8c5',  # mii-1.1.1-remove-duplicates.patch
]

# only make install is needed
skipsteps = ['configure', 'build']

installopts =  'PREFIX=%(installdir)s/ '
installopts += 'MII_ENABLE_SPIDER=yes '

_index_dir = '/cvmfs/soft.computecanada.ca/custom/mii/data'

postinstallcmds = [
    'mkdir -p %s' % _index_dir,
]

sanity_check_paths = {
    'files': ["bin/mii", "share/mii/init/bash", "share/mii/init/zsh", "share/mii/init/common"],
    'dirs': [_index_dir],
}

sanity_check_commands = [('mii', 'version')]

modluafooter = """
setenv("MII", pathJoin(root, "bin/mii"))

local shell = myShellName()

-- If shell is supported, provide shell integration
if (shell == "bash" or shell == "zsh") then
    local hook_name = "command_not_found_handle"
    local hook_def = "source " .. pathJoin(root, "share/mii/init/common") .. ' "$@"'

    -- Correct the hook name if shell is zsh
    if (shell == "zsh") then
        hook_name = hook_name .. 'r'
    end

    -- detect if the current context is being sourced
    if (shell == "zsh") then
    	hook_def = "[[ $ZSH_EVAL_CONTEXT =~ '.*file.*' ]] && SOURCED=1 || SOURCED=0; " .. hook_def
    end
    if (shell == "bash") then
    	hook_def = '[[ -n "${BASH_SOURCE[1]}" ]] && SOURCED=1 || SOURCED=0; ' .. hook_def
    end

    -- Define command not found hook
    set_shell_function(hook_name, hook_def, "")
end
""" 

# Build statistics
buildstats = [{
    "build_time": 43.33,
    "command_line": ['--add-system-to-minimal-toolchains', "--allow-loaded-modules='nixpkgs'", "--buildpath='/tmp/ebuser/avx2'", "--configfiles='/cvmfs/soft.computecanada.ca/easybuild/config.cfg,/cvmfs/soft.computecanada.ca/easybuild/config-nix.cfg'", "--containerpath='/cvmfs/soft.computecanada.ca/easybuild/containers'", '--enforce-checksums', "--filter-deps='Bison,CMake=:3.12.3[,flex,ncurses,libreadline,bzip2,zlib,binutils,M4,Autoconf,Automake,libtool,Autotools,Szip,libxml2,sparsehash=:2.0.3[,SQLite,cURL,Doxygen,expat=:2.2.5[,Mesa,libGLU,SWIG=:3.0.12[,PCRE,libjpeg-turbo,LibTIFF,libpng,XZ,ant,gettext,X11,pkg-config,LLVM=:6.0.1[,libdrm,gperf,FLTK,fontconfig,freetype,GMP,GL2PS,gnuplot,GraphicsMagick,MPFR,libmatheval,Tcl,Tk,CFITSIO,libX11,libXft,libXpm,libXext,makedepend,cairo,libiconv,FFmpeg,GLib,FLANN,hwloc,numactl,DBus,texinfo,libsndfile,Pango,Lua,FreeImage,libevent=:2.1.11['", "--filter-env-vars='LD_LIBRARY_PATH,LD_PRELOAD'", '--disable-fixed-installdir-naming-scheme', '--force', "--hide-deps='icc,ifort,GCCcore'", "--hide-toolchains='GCCcore,iompi,iomkl'", "--hooks='/cvmfs/soft.computecanada.ca/easybuild/cc_hooks_nix.py'", '--ignore-osdeps', "--include-module-naming-schemes='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/SoftCCHierarchicalMNS.py'", "--include-toolchains='/cvmfs/soft.computecanada.ca/easybuild/easybuild-computecanada-config/toolchains/*.py'", "--installpath='/cvmfs/soft.computecanada.ca/easybuild'", '--disable-map-toolchains', '--minimal-toolchains', '--module-depends-on', '--module-extensions', "--module-naming-scheme='SoftCCHierarchicalMNS'", "--optarch='{\\'PGI\\': \\'tp=haswell\\', \\'Intel\\': \\'xCore-AVX2\\', \\'GCC\\': \\'march=core-avx2\\', \\'GCCcore\\': \\'GENERIC\\'}'", "--packagepath='/cvmfs/soft.computecanada.ca/easybuild/packages'", "--parallel='8'", "--prefix='/cvmfs/soft.computecanada.ca/easybuild'", '--recursive-module-unload', "--repository='GitRepository'", "--repositorypath='/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo.git,2017'", "--robot-paths='/cvmfs/soft.computecanada.ca/easybuild/easyconfigs:/cvmfs/soft.computecanada.ca/easybuild/ebfiles_repo/2017'", "--sourcepath='/cvmfs/soft.computecanada.ca/easybuild/sources'", "--subdir-modules='modules/2017'", "--subdir-software='software/2017'", "--subdir-user-modules='.local/easybuild/modules/2017'", "--suffix-modules-path=''", "--try-toolchain='GCCcore,7.3.0'", "--use-ccache='/cvmfs/local/ccache'", '--use-existing-modules', 'mii-1.1.1.eb'],
    "core_count": 16,
    "cpu_arch": "x86_64",
    "cpu_arch_name": "UNKNOWN",
    "cpu_model": "Intel Xeon Processor (Skylake, IBRS)",
    "cpu_speed": 2494.14,
    "cpu_vendor": "Intel",
    "easybuild-easyblocks_version": "4.4.2-r47124f900757595f357e10418dc2fb4eb12c0c37",
    "easybuild-framework_version": "4.4.2-r70243fd7e2a672699d8f1af6e2283e599943b20b",
    "gcc_version": "Using built-in specs.; COLLECT_GCC=/cvmfs/soft.computecanada.ca/nix/var/nix/profiles/gcc-7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/cvmfs/soft.computecanada.ca/nix/store/c9qaklf3dvjvlbky3fiakmafb1p8l106-gfortran-7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; OFFLOAD_TARGET_NAMES=nvptx-none; Target: x86_64-pc-linux-gnu; Configured with: ; Thread model: posix; gcc version 7.3.0 (GCC) ; ",
    "glibc_version": "2.24",
    "hostname": "build-node.computecanada.ca",
    "install_size": 147338,
    "modules_tool": ('Lmod', '/cvmfs/soft.computecanada.ca/custom/software/lmod/lmod/libexec/lmod', '8.4.20'),
    "os_name": "centos linux",
    "os_type": "Linux",
    "os_version": "7.9.2009",
    "platform_name": "x86_64-unknown-linux",
    "python_version": "3.7.7 (default, May  5 2020, 15:36:34) ; [GCC 9.3.0]",
    "system_gcc_path": "/tmp/eb-tfj2_lpc/tmpnbj3pujn/gcc",
    "system_python_path": "/cvmfs/soft.computecanada.ca/nix/var/nix/profiles/16.09/bin/python",
    "timestamp": 1633023320,
    "total_memory": 60232,
}]
